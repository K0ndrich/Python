# Оператор Yield
# При указании Yield функция становиться функцией-генратором
# Yield Позволяет функции возвращать не одно значение, а генератор с набором значений по которому можна итерироваться


def get_list():
    for x in [1, 2, 3, 4]:
        yield x


list(get_list())  # -> [1, 2, 3, 4]

get_list()  # -> <generator object get_list at 0x00000231DFDC9A10>

my_list = get_list()

for a in my_list:
    a  # -> 1 , 2 , 3 , 4


# -----   1) Пример   -------------------------------------------------------------------------------------------------------------------------------------------------------


# функция вычесляет среднне арифметическое для разных последовательностей чисел
def get_average():
    for i in range(1, 10):
        a = range(i, 11)

        yield sum(a) / len(a)


list(get_average())  # -> [5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5]

# -----   2) Пример   -------------------------------------------------------------------------------------------------------------------------------------------------------

# функция возвращает индeксы всех указаного слова (генератор) в текстовом файле


def find_word(file, word):
    # переменная указываем смещение индекса по отношению к строке
    g_index = 0
    # чиатем файл построчно
    for line in file:
        # етот индекс укзавать количество вхождения указаного слова в одной строке файла
        index = 0
        while index != -1:
            # ищем указаное слово в строке
            # начанам со строки под номером index -> 0 , 1 , 2 , 3 и так дальше
            # fine возвращает -1 , если указаное слово в текущей строке не было найдено
            index = line.find(word, index)
            if index > -1:
                yield g_index + index
                index += 1

        g_index += len(line)


try:
    with open("123.txt", encoding="utf-8") as my_file:

        my_indexes = find_word(my_file, "генератор")

        print(
            list(my_indexes)
        )  # -> [0, 11, 22, 33, 44, 54, 65, 76, 86, 96, 107, 118, 128, 139, 149]

# исключение при ненахождении файла
except FileNotFoundError:
    print("File Not Found")

# исключение при всех остальных ошибках
except:
    print("Error Work With File")
