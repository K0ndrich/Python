# Продвинутая Функция Enumerate

# Возвращает итерируемую последовательность в виде пар кортежей [(0, my_number) , (1, my_number) , (2, my_number)]
# Первое значение ето индекс числа, отсчет индекса начинаеться с 0


# enumerate(my_iterable_object)  # -> <enumerate object at 0x000001B4954D0540>
# list(enumerate(my_iterable_object))  # -> [(0, my_number) , (1, my_number) , (2, my_number)]


# enumerate(my_iterable_object, my_start_index)  # -> <enumerate object at 0x000001B4954D0540>
# list(enumerate(my_iterable_object, my_start_index))  # -> [(my_start_index, my_number) , (my_start_index+1, my_number) , (my_start_index+2, my_number)]


# 1) -----   ПРИМЕР   ----------------------------------------------------------------------------------------------------------------------------------------------------------

my_numbers = [1, 2, 3, 4, 5]

enumerate(my_numbers)  # -> <enumerate object at 0x000001E6474F0540>
list(enumerate(my_numbers))  # -> [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5)]


# 2) -----   ПРИМЕР   ----------------------------------------------------------------------------------------------------------------------------------------------------------

my_words = ["apple", "pineaple", "orange", "carrot", "banana"]

for index, value in enumerate(my_words):
    index  # -> 1 , 2 , 3, 4
    value  # -> apple , pineaple , orange , carrot , banana


# 3) -----   ПРИМЕР   ----------------------------------------------------------------------------------------------------------------------------------------------------------


my_numbers = [10, 20, 30, 40, 50]

for index, value in enumerate(my_numbers):
    value += 10
    value  # -> 20 , 30 , 40, 50, 60

# значения полседовательности в цикле не изменяються
my_numbers  # -> [10, 20, 30, 40, 50]


# 3) -----   ПРИМЕР   ----------------------------------------------------------------------------------------------------------------------------------------------------------

my_dict = {"my_key1": 111, "my_key2": 222, "my_key3": 333, "my_key4": 444}

for index, value in enumerate(my_dict):
    index  # -> 0 , 1 , 2 , 3
    # при использовании словаря возвращаються только названия ключей, значения не возвращаються
    value  # -> my_key1 , my_key2 , my_key3 , my_key4


# 4) -----   ПРИМЕР   ----------------------------------------------------------------------------------------------------------------------------------------------------------

# использование функции range()
for index, value in enumerate(range(10, 15)):
    index  # -> 0, 1, 2, 3, 4
    value  # -> 10, 11, 12, 13, 14


# 5) -----   ПРИМЕР   ----------------------------------------------------------------------------------------------------------------------------------------------------------

my_numbers = [10, 20, 30, 40, 50]

# enumerate(my_numbers, my_start_index)
# второй аргумент указывает с какой числа будет начинаться индекс
for index, value in enumerate(my_numbers, 5):
    index  # -> 5, 6, 7, 8, 9
    value  # -> 10, 20, 30, 40, 50
